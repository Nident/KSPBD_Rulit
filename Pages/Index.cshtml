@page
@model KSPBD_Rulit.Pages.IndexModel


@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    ViewData["Title"] = "Главная";
}


<!-- Основное тело с текстом и картинкой по центру -->
<div class="container d-flex justify-content-center align-items-center min-vh-100">
    <div class="d-flex align-items-center gap-3">
        <div class="fw-bold text-uppercase text-dark display-1 display-md-2">КАСП</div>
        <div class="image-place d-none d-sm-block">
            <img src="images/pic_build.svg" alt="Building pics" class="img-fluid">
        </div>
    </div>
</div>

<!-- Модальное окно при выборе Редактирования графика -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <!-- Увеличение ширины модального окна -->
        <div class="modal-content p-4">
            <!-- Внутренний отступ для красивой рамки -->
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Выбор графика для редактирования</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="container mt-3 px-4">
                <!-- Добавлен отступ по бокам -->
                <div class="row mb-3">
                    <div class="col-6">
                        <!-- Выпадающий список объектов -->
                        <label for="objectSelect" class="form-label"><strong>Объект</strong></label>
                        <select id="objectSelect" class="form-select">
                            <option value="" selected>Выберите объект</option>
                            @foreach (var объект in Model.Объекты)
                            {
                                <option value="@объект.ИдОбьекта">@объект.Улица</option>
                            }
                        </select>

                    </div>
                    <div class="col-6">
                        <label for="objectInfo" class="form-label"><strong>Информация об объекте</strong></label>
                        <textarea id="objectInfo" class="form-control h-100 overflow-auto" rows="3" readonly>Здесь будет показываться дополнительная информация об объекте</textarea> <!-- Добавлен readonly -->
                    </div>
                </div>
                <div class="row mb-3">
                    <div class="col-6">
                        <label for="versionSelect" class="form-label"><strong>Версия графика</strong></label>
                        <select id="versionSelect" class="form-select">
                            <option>График производства работ №n за 01.04.2024</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-secondary">Отмена</button>
                            <button type="button" class="btn btn-primary" onclick="window.location.href='/graph';">Открыть</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Модальное окно при выборе Удаления графика -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editDeleteModalLabel">Выбор графика для удаления</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <select id="objectSelect" class="form-select">
                        <option value="" selected>Выберите объект</option>
                        @foreach (var объект in Model.Объекты)
                        {
                            <option value="@объект.ИдОбьекта">@объект.Улица (@объект.Район)</option>
                        }
                    </select>

                </div>
                <div class="mb-3">
                    <label for="scheduleSelect" class="form-label"><strong>График работ</strong></label>
                    <select id="scheduleSelect" class="form-select">
                        <option>График производства работ №n за 01.04.2024</option>
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <!-- Кнопка удаления будет передавать ID выбранного объекта -->
                <button type="button" class="btn btn-danger" id="deleteButton" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal">Удалить</button>
            </div>
        </div>
    </div>
</div>

<!-- Модальное окно для подтверждения удаления -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Подтверждение удаления</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Вы уверены, что хотите удалить выбранный график работ? Это действие необратимо.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <!-- Кнопка для подтверждения удаления -->
                <form id="deleteForm" method="post" asp-page-handler="DeleteObject">
                    <input type="hidden" id="deleteIdInput" name="id" value="" />
                    <button type="button" class="btn btn-danger" id="finalDeleteButton">Удалить</button>
                </form>



            </div>
        </div>
    </div>
</div>

<!-- Уведомление (Toast) -->
<div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 1050;">
    <div id="deleteToast" class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                График работ удалён.
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>


@section Scripts {
    <!-- Скрипт для удаления объекта из БД -->
    <script>
                  document.addEventListener('DOMContentLoaded', function () {
            // Получаем ссылки на элементы
            const objectSelect = document.querySelector('#deleteModal #objectSelect'); // Выбор объекта
            const deleteButton = document.getElementById('deleteButton');
            const finalDeleteButton = document.getElementById('finalDeleteButton');
            const deleteForm = document.getElementById('deleteForm');
            const deleteIdInput = document.getElementById('deleteIdInput');
            const confirmDeleteModalElement = document.getElementById('confirmDeleteModal');
            const confirmDeleteModal = new bootstrap.Modal(confirmDeleteModalElement);
            const deleteToast = new bootstrap.Toast(document.getElementById('deleteToast'));

            if (!objectSelect) {
                console.error('Ошибка: Элемент #objectSelect не найден');
                return;
            }

            // Событие выбора объекта
            objectSelect.addEventListener('change', function () {
                const selectedId = this.value.trim(); // Получаем ID выбранного объекта
                if (selectedId) {
                    console.log('Selected object ID:', selectedId);
                } else {
                    console.warn('Выбран пустой объект');
                }
            });

            // При нажатии на кнопку "Удалить"
            deleteButton.addEventListener('click', function () {
                const selectedId = objectSelect.value.trim(); // Получаем текущий выбранный ID
                if (!selectedId) {
                    alert('Пожалуйста, выберите объект для удаления');
                    return;
                }

                console.log('Selected object ID before confirm modal:', selectedId);
                // Устанавливаем ID в кнопку подтверждения
                finalDeleteButton.setAttribute('data-id', selectedId);
            });

            // При нажатии на "Удалить" в подтверждающем окне
            finalDeleteButton.addEventListener('click', function (e) {
                e.preventDefault(); // Предотвращаем стандартное поведение кнопки

                const idToDelete = this.getAttribute('data-id');
                if (!idToDelete) {
                    alert('Ошибка: не выбран объект для удаления');
                    return;
                }

                console.log('Final object ID to delete:', idToDelete);
                // Устанавливаем ID в скрытое поле формы
                deleteIdInput.value = idToDelete;

                // Закрываем модальное окно
                confirmDeleteModal.hide();

                // Обработчик для события закрытия модального окна
                confirmDeleteModalElement.addEventListener(
                    'hidden.bs.modal',
                    function () {
                        deleteToast.show(); // Показываем уведомление
                    },
                    { once: true } // Убедитесь, что обработчик вызывается только один раз
                );

                // Отправляем форму через AJAX (или делаем задержку перед submit)
                setTimeout(() => {
                    deleteForm.submit(); // Отправляем форму
                }, 3000); // Задержка для отображения Toast
            });
        });



    </script>

    <!-- Скрипт для отображения информации об объекте --> 
    <script>
        document.getElementById('objectSelect').addEventListener('change', async function () {
            const selectedId = this.value;

            if (!selectedId) {
                document.getElementById('objectInfo').value = "Выберите объект для просмотра информации";
                return;
            }

            try {
            const response = await fetch(`/Index?handler=ObjectInfo&id=${selectedId}`);

            if (!response.ok) {
                throw new Error("Ошибка при загрузке данных");
            }

            const data = await response.json();
            console.log(data); // Проверка данных, возвращаемых сервером

            if (data.Error) {
                document.getElementById('objectInfo').value = data.Error;
            } else {
                document.getElementById('objectInfo').value = `Район: ${data.Район}\nУлица: ${data.Улица}\nСтатус: ${data.Статус}`;
            }
        } catch (error) {
            console.error(error);
            document.getElementById('objectInfo').value = "Ошибка загрузки данных";
        }


        });
    </script>



    <script>
        
        // Функция для смены языка
        function changeLanguage(lang) {
            document.getElementById('languageButton').innerText = lang;
        }
    
        // Логика показа уведомления
        document.getElementById('finalDeleteButton').addEventListener('click', function () {
            const deleteToast = new bootstrap.Toast(document.getElementById('deleteToast'));
            deleteToast.show();
        });
    </script>
}